{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","assets/images/burger_logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","store/actions/order.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","NavLink","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","dispatch","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClicked","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","interceptors","request","use","req","response","res","message","authSuccess","userId","logout","localStorage","removeItem","checkAuthTimeout","expireTime","setTimeout","BurgerBuilder","updatePurchaseState","sum","purchaseHandler","purchasing","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitIngredients","disabledInfo","Spinner","onIngredientAdded","onIngredientRemoved","totalPrice","OrderSummary","burgerBuilder","ingName","ingredientName","get","then","data","catch","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","email","isEmail","address","postalCode","minLength","maxLength","isNumeric","country","deliveryMethod","formIsValid","loading","orderHandler","event","preventDefault","formData","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","formRedirect","purchased","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","orderActions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchaseRedirect","path","match","url","component","amount","ingredientOutput","ig","display","border","padding","Orders","onFetchOrders","orders","queryParams","fetchedOrders","fetchOrdersFail","actions","Auth","password","isSignUp","updatedControls","submitHandler","onAuth","switchPageHandler","errorMessage","authRedirect","building","authData","returnSecureToken","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","authFail","Logout","onLogout","App","autoSignIn","routes","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.e22738c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"NavLink\":\"NavigationItem_NavLink__1uZ04\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","module.exports = __webpack_public_path__ + \"static/media/burger_logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport burgerLogo from '../../assets/images/burger_logo.png';\nimport classes from './Logo.module.css'\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\"/>\n    </div>\n)\n\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink className={classes.NavLink} to={props.link} exact activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n)\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\"> Burger Builder </NavigationItem>\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">My Orders</NavigationItem> : null}\n        {!props.isAuthenticated ? \n        <NavigationItem link=\"/auth\">Login / Sign up</NavigationItem>\n        : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n        \n    </ul>\n    \n)\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.module.css'\n\nconst drawerToggle = (props) => {\n    return (\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle' \n\nconst toolbar = (props) => (\n    <header className = {classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <Logo height=\"80%\"/>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated = {props.isAuth} />\n        </nav>\n    </header>\n)\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css'\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux'\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if(props.show){\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.show} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <Logo height=\"11%\"/>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth}/>\n                </nav>\n\n            </div>\n        </Aux>\n    )\n}\n\nexport default sideDrawer;","import React, {Component} from 'react';\nimport Aux from '../Aux/Aux';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\nimport classes from './Layout.module.css';\nimport {connect} from 'react-redux'\n\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState(prevState => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        })\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer isAuth={this.props.isAuthenticated} show={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\n                <main className= {classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n    switch(this.props.type){\n        case ('bread-bottom') :\n            ingredient = <div className={classes.BreadBottom}></div>;\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className = {classes.Seeds1}></div>\n                    <div className = {classes.Seeds2}></div>\n                </div>\n            )\n            break;\n        case ('meat'):\n            ingredient = <div className={classes.Meat}></div>\n            break;\n        case ('cheese'):\n            ingredient = <div className={classes.Cheese}></div>\n            break; \n        case ('bacon'):\n            ingredient = <div className={classes.Bacon}></div>\n            break;  \n        case ('salad'):\n            ingredient = <div className={classes.Salad}></div>\n            break;              \n        default:\n            ingredient = null;            \n    }\n\n    return ingredient;\n\n    }\n    \n}\n\nBurgerIngredient.propTypes = {\n    type : PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\nimport classes from './Burger.module.css';\n\nconst burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key={igKey + i} type={igKey} />\n        })\n    })\n    .reduce((arr, el) => {\n        return arr.concat(el);\n    }, [])\n\n    if(transformedIngredients.length === 0){\n        transformedIngredients = <p>Please start adding ingredients.</p>\n    }\n\n    return (\n        <div className = {classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n\n        </div>\n    );\n}\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => {\n    return (\n        <div className = {classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n            <button className={classes.More} onClick={props.added}>More</button>\n        </div>\n    )\n}\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Meat', type: 'meat'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'}    \n]\n\nconst buildControls = (props) => {\n    return (\n        <div className={classes.BuildControls}>\n            <p>Current price: <strong>Rs. {props.price.toFixed(2)}</strong></p>\n            {controls.map(ctrl => (\n                <BuildControl key={ctrl.label}\n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n                />\n            ))}\n\n            <button className={classes.OrderButton} disabled = {!props.purchasable} onClick={props.ordered}>{props.isAuthenticated ? 'ORDER NOW!' : 'SIGN IN AND ORDER!'}</button>\n            \n        </div>\n    )\n}\n\nexport default buildControls;","import React, {Component} from 'react';\nimport classes from './Modal.module.css'\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    } // now it will update only when modal is opened, otherwise it is not rendered.\n\n    render(){\n        return (\n            <Aux>\n            <Backdrop show={this.props.show} clicked={this.props.modalClicked} />\n            <div className = {classes.Modal}\n            style={{transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n            opacity: this.props.show ? '1': '0'}}>\n                {this.props.children}\n            </div>\n            </Aux>\n        )\n    }\n   \n}\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.module.css'\n\nconst button = (props) => (\n    <button className = {[classes.Button,classes[props.btnType]].join(' ')}\n    onClick={props.clicked} disabled={props.disabled}>{props.children}</button>\n)\n\nexport default button;","import React from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button'\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n    .map(igKey => {\n        return(<li key={igKey}>\n            <span style={{textTransform: \"capitalize\"}}>{igKey}</span> : {props.ingredients[igKey]}</li>)\n    })\n    return (\n        <Aux>\n            <h3>Your order:</h3>\n            <p>A delicious burger with the following ingredients: </p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p>Total: Rs. <strong>{props.price.toFixed(2)}</strong></p>\n            <p>Continue to checkout?</p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n    )\n}\n\n\n\nexport default orderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://burger-react-bace8.firebaseio.com/'\n})\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}></div>\n)\n\nexport default spinner;\n","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClicked={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: 'AUTH_START'\n    }\n}\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: 'AUTH_SUCCESS',\n        token: token,\n        userId: userId\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: 'AUTH_FAIL',\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n\n    return {\n        type: 'AUTH_LOGOUT'\n    }\n}\n\nexport const checkAuthTimeout = (expireTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expireTime * 1000)\n    }\n}\n\nexport const auth = (email, password, isSignUp) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCct7j7_999sK_Pfuzrr9ZgUbDoia0MLQM'\n        if(isSignUp){\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCct7j7_999sK_Pfuzrr9ZgUbDoia0MLQM'\n        } \n        axios.post(url, authData)\n        .then(response=> {\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\n            localStorage.setItem('token', response.data.idToken)\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId', response.data.localId)\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            dispatch(checkAuthTimeout(response.data.expiresIn))\n        })\n        .catch(error => {\n            dispatch(authFail(error.response.data.error))\n        })\n        \n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token){\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(expirationDate <= new Date()){\n    \n                dispatch(logout())\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n        }\n    }\n}","import React, {Component} from 'react';\nimport{connect} from 'react-redux';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\n\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasable: false,\n      }\n\n    componentDidMount() {\n        this.props.onInitIngredients()\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n        .map(igKey => {\n            return ingredients[igKey];\n        })\n        .reduce((sum, el) => {\n            return sum + el;\n        }, 0);\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.props.isAuthenticated ? this.setState({purchasing: true}) : this.props.history.push('/auth');\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false})\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout')\n    }\n\n    render(){\n        const disabledInfo = {...this.props.ingredients}\n\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n\n        let orderSummary=null;\n\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />;\n\n        if(this.props.ingredients) {\n            burger = (<Aux>\n                        <Burger ingredients = {this.props.ingredients}></Burger>\n                        <BuildControls \n                            ingredientAdded = {this.props.onIngredientAdded}\n                            ingredientRemoved = {this.props.onIngredientRemoved}\n                            disabled = {disabledInfo}\n                            price={this.props.totalPrice}\n                            purchasable = {this.updatePurchaseState(this.props.ingredients)}\n                            ordered={this.purchaseHandler}\n                            isAuthenticated={this.props.isAuthenticated}/>\n                    </Aux>)\n            orderSummary = <OrderSummary ingredients={this.props.ingredients}\n            purchaseCancelled={this.purchaseCancelHandler}\n            purchaseContinued = {this.purchaseContinueHandler}\n            price={this.props.totalPrice} />         \n        }\n\n        // if(this.state.loading){\n        //     orderSummary = <Spinner />\n        // }\n\n        \n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClicked={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\n","import axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: 'ADD_INGREDIENT',\n        ingredientName: name\n    }\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        type: 'REMOVE_INGREDIENT',\n        ingredientName: name\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: 'SET_INGREDIENTS',\n        ingredients: ingredients\n    }\n}\n\nexport const fetchIngredientsFalied = () => {\n    return {\n        type: 'FETCH_INGREDIENTS_FAILED'\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://burger-react-bace8.firebaseio.com/ingredients.json')\n        .then(response => {\n            dispatch(setIngredients(response.data));\n        })\n        .catch(error => {\n            dispatch(fetchIngredientsFalied())\n        })\n    }\n}","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport './CheckoutSummary.css'\n\nconst checkoutSummary = (props) => (\n            <div className=\"CheckoutSummary\">\n                <h1>We hope it tastes well!</h1>\n                <div style={{width: '100%', margin: 'auto'}}>\n                    <Burger ingredients={props.ingredients} />\n                </div>\n                <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\n            </div>  \n)\n\nexport default checkoutSummary;","import React from 'react';\nimport './Input.css'\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [\"InputElement\"]\n\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(\"Invalid\");\n    }\n\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input className={inputClasses.join(' ')}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}/>\n            break;\n        case('textarea'):\n            inputElement=<textarea className={inputClasses.join(' ')}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}/>\n            break;\n        case('select'):\n            inputElement = <select className={inputClasses.join(' ')}\n            value={props.value}\n            onChange={props.changed}>\n                {props.elementConfig.options.map(option => (\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\n                ))}\n            </select>    \n            break;        \n        default:\n            inputElement = <input className={inputClasses.join(' ')}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}/>\n            break;    \n    }\n\n    return (\n        <div className=\"Input\">\n            <label className=\"Label\">{props.label}</label>\n            {inputElement}\n        </div>\n    )\n\n}\n    \n\n\nexport default input;","import React, {Component} from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport './ContactData.css';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as orderActions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm : {\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your Name'\n            }, \n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Your E-mail'\n            }, \n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        address: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Address'\n            }, \n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        postalCode: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Pin Code'\n            }, \n            value: '',\n            validation: {\n                required: true,\n                minLength: 6,\n                maxLength: 6,\n                isNumeric: true\n            },\n            valid: false,\n            touched: false\n        },\n        country: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Country'\n            }, \n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        deliveryMethod: {\n            elementType: 'select',\n            elementConfig: {\n                options: [{value: 'fastest', displayValue: 'Fastest'}, \n                          {value: 'cheapest', displayValue: 'Cheapest'}]\n            },\n            value: 'fastest',\n            validation: {},\n            valid: true\n        }\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        const formData = {};\n        for(let key in this.state.orderForm){\n            formData[key] = this.state.orderForm[key].value\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        }\n        this.props.onOrderBurger(order, this.props.token);\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {...this.state.orderForm}\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    checkValidity = (value, rules) => {\n        let isValid = true;\n\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        if(rules.isEmail){\n            let pattern = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\n            isValid = pattern.test(value) && isValid;\n        }\n\n        if(rules.isNumeric){\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid;\n        }\n\n        return isValid;\n    }\n    \n    render(){\n        const formElementsArray = [];\n        for(let key in this.state.orderForm){\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n\n        let form = <form onSubmit={this.orderHandler}>\n            {formElementsArray.map(formElement => (\n                <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\n                shouldValidate = {formElement.config.validation}\n                touched = {formElement.config.touched}\n                invalid={!formElement.config.valid}/>\n            ))}\n            <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER!</Button>\n        </form>\n        if(this.props.loading){\n            form = <Spinner />\n        }\n\n        let formRedirect = null;\n\n        if(this.props.purchased){\n            formRedirect = <Redirect to=\"/\" />\n        }\n        return (\n            \n            <div className=\"CheckoutBox\">\n                {formRedirect}\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId,\n        purchased: state.order.purchased\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(orderActions.purchaseBurger(orderData, token))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: 'PURCHASE_BURGER_SUCCESS',\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: 'PURCHASE_BURGER_FAIL',\n        error: error\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: 'PURCHASE_BURGER_START'\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart())\n        axios.post('/orders.json?auth=' + token, orderData)\n        .then(response => {\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n        })\n        .catch(error => {\n            dispatch(purchaseBurgerFail(error));\n        })\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: 'PURCHASE_INIT'\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: 'FETCH_ORDERS_SUCCESS',\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: 'FETCH_ORDERS_FAIL',\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: 'FETCH_ORDERS_START'\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json' + queryParams)\n        .then(response => {\n            const fetchedOrders = []\n            for(let key in response.data){\n                fetchedOrders.push({...response.data[key], id: key})\n            }\n            dispatch(fetchOrdersSuccess(fetchedOrders))\n        })\n        .catch(error => {\n            dispatch(fetchOrdersFail(error));\n        })\n    }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport { Route, Redirect } from 'react-router-dom';\n\nclass Checkout extends Component {\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data')\n    }\n\n    render(){\n        let summary = <Redirect to=\"/\" />\n        if(this.props.ingredients) {\n            const purchaseRedirect = this.props.purchased ? <Redirect to = '/' /> : null\n            summary = (\n                <div>\n                {purchaseRedirect}    \n                <CheckoutSummary ingredients={this.props.ingredients}\n                checkoutCancelled={this.checkoutCancelledHandler}\n                checkoutContinued={this.checkoutContinuedHandler} />\n                <Route path={this.props.match.url + \"/contact-data\"}\n                component={ContactData}/>\n                </div>\n            )\n        }\n        return summary\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        purchased: state.order.purchased\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport './Order.css';\n\nconst order = (props) => {\n    const ingredients = [];\n    for(let ingredientName in props.ingredients) {\n        ingredients.push({name: ingredientName, amount: props.ingredients[ingredientName]})\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return(<span style={{display: 'inline-block', border: '1px solid #ccc', margin: '0 8px', padding: '5px', textTransform: 'capitalize'}}\n             key={ig.name}>{ig.name} - {ig.amount} </span>)\n    })\n\n    return (\n        <div className=\"Order\">\n        <p>Ingredients: {ingredientOutput}</p>\n        <p>Total Price:<strong> Rs. {props.price}</strong></p>\n    </div>\n    )\n}\n\nexport default order;","import React, {Component} from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport {connect} from 'react-redux';\n\nclass Orders extends Component{\n    componentDidMount(){\n        this.props.onFetchOrders(this.props.token, this.props.userId)\n        \n    }\n    render(){\n        let orders = this.props.orders.map(order => {\n            return <Order key={order.id} ingredients={order.ingredients} price={+order.price} />\n        });\n        if(this.props.loading){\n            orders = <Spinner />\n        }\n\n        return(\n            <div>\n                {orders}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => {dispatch(actions.fetchOrders(token, userId))}\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, {Component} from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport './Auth.css';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport {connect} from 'react-redux'\nimport * as actions from '../../store/actions/index';\nimport {Redirect} from 'react-router-dom';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'E-mail'\n                }, \n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                }, \n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        formIsValid: false,\n        isSignUp: false\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedControls = {...this.state.controls}\n        const updatedFormElement = {...updatedControls[inputIdentifier]};\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true\n        updatedControls[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for(let inputIdentifier in updatedControls){\n            formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({controls: updatedControls, formIsValid: formIsValid});\n    }\n\n    checkValidity = (value, rules) => {\n        let isValid = true;\n\n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if(rules.isEmail){\n            let pattern = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\n            isValid = pattern.test(value) && isValid;\n        }\n\n        return isValid;\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\n    }\n\n    switchPageHandler = () => {\n        this.setState(prevState => {\n            return {isSignUp: !prevState.isSignUp}\n        })\n    }\n\n    render(){\n        const formElementsArray = [];\n        for(let key in this.state.controls){\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            })\n        }\n\n\n        let form = formElementsArray.map(formElement => (\n                <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\n                shouldValidate = {formElement.config.validation}\n                touched = {formElement.config.touched}\n                invalid={!formElement.config.valid}/>\n            ))\n\n        if(this.props.loading){\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n\n        if(this.props.error){\n            errorMessage = (\n            <p>{this.props.error.message}</p>\n            )\n        }\n\n        let authRedirect = null;\n        if(this.props.isAuthenticated){\n            if(this.props.building){\n                authRedirect = <Redirect to = \"/checkout\" />\n            } else {\n                authRedirect = <Redirect to=\"/\" />\n            }\n            \n        }\n\n        return (\n            <div className=\"Auth\">\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">{this.state.isSignUp ? 'SIGN UP' : 'SIGN IN'}</Button>\n                </form>\n                <Button btnType=\"Danger\" clicked={this.switchPageHandler}>SWITCH TO {this.state.isSignUp ? 'SIGN IN' : 'SIGN UP'}</Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        building: state.burgerBuilder.building\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)) \n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../../../store/actions/index';\nimport {Redirect} from 'react-router-dom';\n\nclass Logout extends Component {\n\n    componentDidMount(){\n        this.props.onLogout();\n    }\n\n    render(){\n        return <Redirect to=\"/\"/>\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport './App.css';\nimport Checkout from './containers/Checkout/Checkout';\nimport {Route, withRouter, Switch, Redirect} from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n  componentDidMount(){\n    this.props.autoSignIn();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/\" exact component={BurgerBuilder} />  \n        <Route path=\"/auth\" component={Auth} />\n        {/* <Redirect to = \"/\" /> */}\n      </Switch>\n    )\n\n    if(this.props.isAuthenticated){\n      routes = (\n        <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/logout\" component={Logout} />\n            {/* <Redirect to=\"/\" /> */}\n        </Switch>\n      )\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    token: state.auth.token,\n    userId: state.auth.userId\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoSignIn: () => dispatch(actions.authCheckState())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    ingredients : null,\n    totalPrice: 20,\n    error: false,\n    building: false\n}\n\nconst INGREDIENT_PRICES = {\n    salad: 2,\n    cheese: 5,\n    meat: 20,\n    bacon: 30\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case('ADD_INGREDIENT'):\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                building: true \n            }\n        case('REMOVE_INGREDIENT'):\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n                building: true\n            }\n        case 'SET_INGREDIENTS':\n            return {\n                ...state,\n                ingredients: action.ingredients,\n                totalPrice: 20,\n                building: false\n            }   \n        case 'FETCH_INGREDIENTSS_FAILED':\n            return {\n                ...state,\n                error: true\n            }     \n        default:\n            return state\n    }\n}\n\nexport default reducer;","const initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case 'PURCHASE_INIT':\n            return {\n                ...state,\n                purchased: false\n            }\n        case 'PURCHASE_BURGER_SUCCESS':\n            const newOrder = {\n                ...action.orderData,\n                id: action.id\n            }\n            return{\n                ...state,\n                loading: false,\n                orders: state.orders.concat(newOrder),\n                purchased: true\n            }\n        case 'PURCHASE_BURGER_FAIL':\n            return {\n                ...state,\n                loading: false\n            }\n        case 'PURCHASE_BURGER_START':\n            return {\n                ...state,\n                loading: true,\n                purchased: false\n            }\n        case 'FETCH_ORDERS_START':\n            return {\n                ...state,\n                loading: true,\n            }  \n        case 'FETCH_ORDERS_SUCCESS':\n            return {\n                ...state,\n                loading: false,\n                orders: action.orders,\n            }\n        case 'FETCH_ORDERS_FAIL':\n            return {\n                ...state,\n                loading: false\n            }               \n        default:\n            return state\n    }\n\n}\n\nexport default reducer","const initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type){\n        case 'AUTH_START':\n            return{\n                ...state,\n                loading: true,\n                error: null\n            }\n        case 'AUTH_SUCCESS':\n            return {\n                ...state,\n                token: action.token,\n                userId: action.userId,\n                error: null,\n                loading: false\n            }\n        case 'AUTH_FAIL':\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            } \n        case 'AUTH_LOGOUT':\n            return {\n                ...state,\n                token: null,\n                userId: null,\n                error: null,\n                loading: false\n            }\n        default:\n            return state;    \n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder.js';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </Provider>\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}